#Pipeline name

name: '01_AzInfra_Plan'


#Parameters for the pipeline

# CD Trigger

trigger:
  branches:
    include:
    - main
  paths:
    include:
    - Terraformconfig/01_Infra_DatabricksWorkspace/*
    - Modules/*

# Job Workers config

pool:
  vmImage: 'ubuntu-latest'

# Variables for the job

variables:
- group: SubSetup
- group: SubSetupKV

# Stages

stages:
  - stage: terraform_plan_stage
    jobs: 
    - job: terraform_plan
      continueOnError: false
      # Job step
      steps:
      
      - script: |
         echo Getting Terraform
         echo "Building TFURI for DL"
         echo "current terraform version is $TFVer"
         export TFuri1="https://releases.hashicorp.com/terraform/$TFVer/terraform_"
         export TFuriTemp=$TFuri1$TFVer
         export TFuriend="_linux_amd64.zip"
         export TFuri=$TFuriTemp$TFuriend
         echo "TFDL URI is $TFuri"
         wget $TFuri
         
         echo "building TFZip name"
         export TFZip1="terraform_"
         export TFZipEnd="_linux_amd64.zip"
         export TFZipTemp=$TFZip1$TFVer
         export ZIPName=$TFZipTemp$TFZipEnd
         echo "Zip name is $ZIPName"
         unzip -a $ZIPName
         
         sudo mv ./terraform /usr/local/bin/terraform
         
         terraform version
         
        displayName: 'Download and update Terraform'
        env:
          TFVer: $(TFVer)

      
      - script: |
         echo '######################################################'   
         echo 'Init and plan Terraform'
         echo '######################################################'
         echo
         echo '######################################################'    
         echo 'Init Terraform'
         echo
         terraform init \
         -backend-config="key=${key}" \
         -backend-config="access_key=${access_key}" \
         -backend-config="container_name=${container_name}" \
         -backend-config="storage_account_name=${storage_account_name}" \
         -no-color
         echo 'State is stored in:'${key}
         echo
         echo '######################################################'
         echo 'check terraform'
         terraform version
         echo
         echo 'check files'
         ls
         echo 'Plan Terraform'
         echo
         terraform plan \
         -var AzureSubscriptionID=${AzureSubscriptionID} \
         -var AzureTenantID=${AzureTenantID} \
         -var AzureADClientSecret=${AzureADClientSecret} \
         -var AzureADClientID=${AzureADClientID} \
         -var AzureClientID=${AzureClientID} \
         -var AzureClientSecret=${AzureClientSecret} \
         -var SubsetupAccessKey=${access_key} \
         -var SubsetupContainerName=${container_name} \
         -var SubsetupSTOAName=${storage_account_name} \
         -input=false
     
    
        workingDirectory: 'Terraformconfig/01_Infra_DatabricksWorkspace'
        displayName: 'Terraform init & Plan'
        env:
          AzureClientID: $(TFId)
          AzureClientSecret: $(TFSecret)
          AzureSubscriptionID: $(SubscriptionId)
          AzureTenantID: $(TenantId)
          AzureADClientID: $(TFAADId)
          AzureADClientSecret: $(TFAADSecret)
          key: $(TFState_AzInfra)
          SubSetupKey: $(TFState_SubSetup_key)
          access_key: $(TFStateSTOAK)
          container_name: $(TFState_container_name)
          storage_account_name: $(TFState_storage_account_name)

